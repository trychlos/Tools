# @(#) Loop over command-line positional arguments
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2021 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
#   This function may be overriden by a 'verb_arg_read_pos' verb-
#   specific function.
#
# (I): 1. array of command-line args
#
# (O): return: count of errors
#
# pwi 2013- 6- 3 creation
# pwi 2013- 7-15 review options dynamic computing
# pwi 2017- 6-21 publish the release at last
# pwi 2021-12-28 improve verbose execution

function optReadPosArgs
{
	#set -x
	typeset -i _ret=0

	type verb_arg_read_pos >/dev/null 2>&1
	if [ $? -eq 0 ]; then
		verb_arg_read_pos "$@"

	else
		typeset -i _ia=1
		typeset -i _pos=0
		while [ ${_ia} -le $# ]; do
			if [ "${ttp_usedargs[${_ia}]}" != "yes" ]; then
				typeset _val="$(echo $(eval echo '${'${_ia}'}'))"
				# get and try to interpret the next argument
				let _pos+=1
				if [ ${_pos} -gt ${ttp_posargs_count} ]; then
					msgErr "'${_val}': unexpected positional argument at #${_pos}"
					let _ret+=1
				# opt_output=${_val}
				else
					typeset -i _idx=${_pos}-1
					typeset _name="${ttp_posargs_key[${_idx}]}"
					eval $(echo "pos_"${_name}"_set=yes")
					[ "${opt_verbose}" == "yes" ] && msgVerbose "setting pos_${_name}_set to 'yes'"
					eval $(echo "pos_"${_name}"='"${_val}"'")
					[ "${opt_verbose}" == "yes" ] && msgVerbose "setting pos_${_name} to '${_val}'"
				fi
			fi
			let _ia+=1
		done
	fi

	return ${_ret}
}
