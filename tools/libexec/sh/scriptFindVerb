# @(#) Find the required verb
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2021 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
#   To be considered valid, a verb must be a readable script, whose the
#   basename is equal to the searched verb. An extension is accepted,
#   though not required.
#
#   It is invalid for more than two scripts in the same directory to
#   have the same basenames.
#
# pwi 2013- 6-27
#
#   Tools v2 let the user override verbs, functions and so on by subtily
#   modify its FPATH variable, thus having a 'ttp_roots' list of
#   candidate Tools trees - So only take care of the first verb found.
#
# (I): 1. verb as specified in the command line
#
# (O): Displays on stdout the full pathname of the found verb
#
# pwi 1998-10-21 new production architecture definition - creation
# pwi 2002- 6- 4 use local variables
# pwi 2002- 6-22 remove shebang line
# pwi 2006-10-27 the tools become The Tools Project, released under GPL
# pwi 2013- 6-27 keep only the first found verb
# pwi 2017- 6-21 publish the release at last 

function scriptFindVerb
{
	typeset _asked="${1}"
	typeset _dir
	typeset _file

	for _dir in $(scriptEnumDirs ${ttp_command}); do
		LANG=C \ls -1 ${_dir}/${_asked} ${_dir}/${_asked}.* 2>/dev/null | while read _file; do
			echo "${_file}"
			return 0
		done
	done
	
	return 1
}
