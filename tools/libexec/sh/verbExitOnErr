# @(#) Increment ttp_errs, exiting if greater than zero
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2017 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
# (I): 1. (opt.) return code of last called function
#                defaults to zero
#      2. (opt.) whether display the error and help message
#                defaults to 'yes'
#
# (O): -
#
# pwi 2013- 6- 3 creation
# pwi 2013- 7-29 ttp_code is set in trap_exit
# pwi 2017- 6-21 publish the release at last 

function verbExitOnErr
{
	typeset -i _ret=${1:-0}
	typeset _display="${2:-yes}"

	# increment errors count if any
	if [ ${_ret} -gt 0 ]; then
		let ttp_errs+=${_ret}
	fi

	# exiting if errors count greater than zero
	if [ ${ttp_errs} -gt 0 ]; then

		# do not display the error and help message when the error is
		#  non existant verb
		if [ "${_display}" = "yes" ]; then
			if [ ${ttp_errs} -eq 1 ]; then
				msgout "an error has been detected"
			else
				msgout "${ttp_errs} errors have been detected"
			fi
			msgout "try '${ttp_command} ${ttp_verb} --help' for usage"
		fi

		# exiting...
		exit
	fi
}
