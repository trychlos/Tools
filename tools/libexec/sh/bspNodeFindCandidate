# @(#) Find a suitable candidate execution node
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2017 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
#   Because The Tools Project wants to manage the 'logical machines'
#   paradigm, it requires to be able to setup a default execution node
#   at login time, making sure at least one exists, and setting up a
#   TTP_NODE variable in the user environment.
#
#   This function searches for such a suitable candidate, making sure
#   a node configuration file is defined for the candidate.
#
# (I): -
#
# (O): - stdout: best candidate, or nothing
#
# BootstrappingProcess:
#
#   This function is involved in the bootstrapping process, either
#   as part of the FPATH initialization, or as part of the execution
#   node setup.
#   Because of that, it must be executed as an in-process run.
#   Consequently, it has to be reviewed each time another login shell
#   has to be managed.
#
# pwi 2013- 2-16 creation
# pwi 2017- 6-21 publish the release at last 

function bspNodeFindCandidate
{
	# if TTP_NODE is already set, just return it
	[ -z "${TTP_NODE}" ] || { echo "${TTP_NODE}"; return 0; }

	# compute the ordered list of candidate TTPROOT trees from FPATH
	[ -z "${ttp_roots}" ] && ttp_roots="$(bspRootCompute)"
	#echo "ttp_roots='${ttp_roots}'" >&2
	#ttp_roots='/home/pierre/data/eclipse/Tools/v2/tools'

	bspNodeEnum | head -1
}
