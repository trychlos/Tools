# @(#) Enumerate current mount points
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2021 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
#   We are only interested on mounted filesystems on the toplevel
#   hierarchy, thus just leaving out the others. They are listed
#   without their leading slash '/', being thus adequate to be
#   compared to a machine name.
#
# (I): -
#
# (O): stdout: list of mount points
#
# BootstrappingProcess:
#
#   This function is involved in the bootstrapping process, either
#   as part of the FPATH initialization, or as part of the execution
#   node setup.
#   Because of that, it must be executed as an in-process run.
#   Consequently, it has to be reviewed each time another login shell
#   has to be managed.
#
# pwi 2013- 2-16 creation
# pwi 2013- 7-10 only increment ttp_errs, not ttp_code
# pwi 2013- 7-30 no more increment ttp_errs, returning code instead
# pwi 2013- 7-30 fix #31: rename osEnumFSMountPoints to bspOSEnumMountPoints
# pwi 2017- 6-21 publish the release at last 

function bspOSEnumMountPoints
{
	#set -x
	typeset _os="$(uname -s)"
	typeset -i _col=0
	typeset -i _ret=0

	case "${_os}" in

		AIX)
			# ok with Aix 6.1
			_col=2
			;;

		Linux)
			# ok with CentOS 5 & 6
			# ok with Fedora 17
			_col=3
			;;

		*)
			msgerr "${_os}: unmanaged operating system"
			let _ret=1
			;;
	esac

	# do not use 'df' as it may be blocked by a NFS stale handle
	if [ ${_col} -gt 0 ]; then
		mount | \
			awk -v col=${_col} '{
				n = split( $col,T,"/" );
				if( n == 2 && $col != "/" ) print T[2];
			}'
	fi

	return ${_ret}
}
