# @(#) Select required lines in the input stream
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2021 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
#   Lines are selected based on the value of the first and/or the second
#   field; if any of the specification is empty, then all values are
#   selected.
#
# (I): 1. (opt) character used as field separator (':')
#      2. (opt) comma-separated list of desired fields (empty means all)
#
# (O): - values are displayed on stdout
#
# pwi 1998-10-21 creation
# pwi 2001-12- 6 add field separator argument
# pwi 2002- 3-22 accept "3,-" notation for field 3 and next
# pwi 2002- 6-22 remove shebang line
# pwi 2006-10-27 tools become The Tools Project, released under GPL
# pwi 2017- 6-21 publish the release at last 

function tabExtractFields
{
	typeset _sep="${1}"
	[ -z "${_sep}" ] && _sep=":"

	typeset _fields_list="${2}"
	[ -z "${_fields_list}" ] && { cat -; return 0; }

	awk -F${_sep} '{
		count = split( myfields, liste, "," )
		out = 0
		for( i=1 ; i<=count ; i+=1 ){
			if( liste[i] == "-" && last < NF ){
				for( j=last+1 ; j<=NF ; ++j ){
					if( out > 0 ) printf( "%s", mysep )
					printf( "%s", $j )
					out += 1
				}
			} else {
				if( liste[i] > 0 && liste[i] <= NF ){
					if( out > 0 ) printf( "%s", mysep )
					printf( "%s", $liste[i] )
					last = liste[i]
					out += 1
				}
			}
	   	}
		printf( "\n" )
	}' myfields="${_fields_list}" mysep=${_sep}
}
