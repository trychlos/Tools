# @(#) Test for the presence of an Oracle process
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2021 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
# (I): 1. process radical name
#      2. message to be displayed
#      3. file where process are to be searched
#      4. minimum count of this type of process (default to 1)
#      5. maximum count of this type of process (default to 1)
#
# (O): return: 0 if ok
#
# This function has been forked from oracle.sh info, from
#  tools-v1.0-ixis.is-oct.2006-rev.12730 project
#
# pwi 2013- 6-14 creation
# pwi 2017- 6-21 publish the release at last 

function oraTestDBProcess
{
	#set -x
	typeset _process="${1}"
	typeset _msg="${2}"
	typeset _ftmp="${3}"
	typeset _mini="${4:-1}"
	typeset _maxi="${5:-1}"

	typeset -i _ret=0

	msgOut "verifying '${_msg}' process..." "" " "
	typeset -i _count=$(grep -c "${_process}" "${_ftmp}")
	if [ ${_count} -ge ${_mini} -a ${_count} -le ${_maxi} ]; then
		msgOut "(${_count} found): OK" " \b"
	elif [ ${_count} -eq 0 ]; then
		msgOut "(no found process): NOT OK" " \b"
		let _ret=1
	else
		msgOut "${_count} found process(es)): NOT OK"
		let _ret=1
	fi

	return ${_ret}
}
