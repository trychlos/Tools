# @(#) Output the Oracle SGA statistics
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2017 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
# (I): 1. service mnemonic
#
# (O): stdout: SQL output
#
# This function has been forked from oracle.sh info, from
#  tools-v1.0-ixis.is-oct.2006-rev.12730 project
#
# pwi 2013- 6-12 creation
# pwi 2017- 6-21 publish the release at last 

function oraSgaStats
{
	typeset _service="${1}"

	typeset -i _width=${#_service}
	[ ${_width} -lt 7 ] && let _width=7 

	cat - <<! | \
		oracle.sh sql \
			-service "${opt_service_value}" -interactive -quiet | \
		perl -se '{
			$csep = "|";
			$csplit = "\\$csep";
			#                           streams pool...
			#                          "               "
			$pools = {
				"fixed_sga"			=> "(fixed pool)   ",
				"db_block_buffers"	=> "(database pool)",
				"buffer_cache"		=> "(database pool)",
				"log_buffer"		=> "(redo pool)    "
			};
			while( <STDIN> ) {
				chomp;
				next if !length;
				next if /rows selected/;
				@words = split /\s*${csplit}\s*/;
				@orig = split /${csplit}/;
				if( !length( $words[2] )){
					if( exists( $pools->{$words[3]} )){
						$orig[2] = $pools->{$words[3]};
					} else {
						printf( STDERR "%swarning: unattributed pool for '%s' data\n", $msg, $words[3] );
						$orig[2] = "               ";
					}
				} elsif( $words[0] =~ /^--/ ){
					$orig[2] .= "---";
				} else {
					$orig[2] .= "   ";
				}
				printf( "%s\n", join( $csep,@orig ));
				$nl += 1;
			}
			printf( "%s%d displayed rows\n", $msg, $nl-2 );
		}' -- -msg="$(msgoutPrefix)"

	set linesize 32767
	set pagesize 50000
	set tab off
	set colsep '|'
	column SERVICE heading 'Service' format a${_width}
	column POOL    heading 'Pool'
	column NAME    heading 'Name'
	column BYTES   heading 'Bytes'
	select 
		'${_service}' as SERVICE,
		'SG' as SG,
		pool,name,bytes from v\$sgastat;
!
}
